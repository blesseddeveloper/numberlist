{"version":3,"sources":["ListSubheader.js","ListItem.js","AddDialog.js","SnackbarContent.js","Snackbar.js","ListCard.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","background","ListSubheader","numbers","disableDelete","disableSort","onDelete","onSort","onOpenAdd","classes","className","Grid","container","item","xs","Typography","variant","component","length","justify","IconButton","size","disabled","onClick","Sort","fontSize","Delete","theme","width","display","padding","spacing","secondaryAction","ListItem","checked","number","button","divider","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","aria-label","Close","TextMaskCustom","props","inputRef","other","ref","inputElement","mask","AddDialog","open","onClose","onAdd","useState","error","setError","newNumber","setNewNumber","handleClose","hasError","Dialog","DialogTitle","DialogContent","DialogContentText","FormControl","Input","autoFocus","margin","id","label","onChange","event","parseInt","target","value","fullWidth","inputComponent","FormHelperText","DialogActions","Button","color","errorStr","indexOf","flexWrap","SnackbarContent","message","aria-describedby","anchorOrigin","vertical","horizontal","Snackbar","autoHideDuration","backgroundColor","palette","paper","overflow","maxHeight","marginTop","fab","position","bottom","right","ListCard","unfold","n","setNumbers","sortAsc","setSortAsc","setChecked","showAdd","setShowAdd","setMessage","sortedNumbers","sortWith","comparator","a","b","handleClick","currentIndex","newChecked","push","splice","handleDelete","without","List","subheader","map","key","append","createMuiTheme","main","secondary","red","A400","default","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.24d9502e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Grid,\n  makeStyles,\n  ListSubheader as MuiListSubheader,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  AddBox as AddIcon,\n  Sort as SortIcon,\n  Delete as DeleteIcon,\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    background: \"#b3d0bd\",\n  },\n}));\n\nconst ListSubheader = ({\n  numbers,\n  disableDelete,\n  disableSort,\n  onDelete,\n  onSort,\n  onOpenAdd,\n}) => {\n  const classes = useStyles();\n  return (\n    <MuiListSubheader className={classes.root}>\n      <Grid container item xs={12}>\n        <Grid item xs={7}>\n          <Typography variant=\"h5\" component=\"span\">\n            My Numbers\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            component=\"span\"\n          >{` (${numbers.length})`}</Typography>\n        </Grid>\n        <Grid container justify=\"flex-end\" item xs={5}>\n          <Grid item xs={3}>\n            <IconButton size=\"small\" disabled={disableSort} onClick={onSort}>\n              <SortIcon fontSize=\"small\" />\n            </IconButton>\n          </Grid>\n          <Grid item xs={3}>\n            <IconButton\n              size=\"small\"\n              disabled={disableDelete}\n              onClick={onDelete}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Grid>\n          <Grid item xs={3}>\n            <IconButton size=\"small\" onClick={onOpenAdd}>\n              <AddIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MuiListSubheader>\n  );\n};\n\nexport default ListSubheader;\n","import React from \"react\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport {\n  Checkbox,\n  ListItem as MuiListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 360,\n    \"&:hover + $secondaryAction\": {\n      display: \"block\",\n    },\n    padding: theme.spacing(2),\n  },\n  secondaryAction: {\n    display: \"none\",\n    \"&:hover\": {\n      display: \"block\",\n    },\n  },\n}));\n\nconst ListItem = ({ checked, number, onClick, onDelete }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiListItem\n      button\n      classes={{ root: classes.root }}\n      divider\n      onClick={() => onClick(number)}\n    >\n      <ListItemIcon>\n        <Checkbox edge=\"start\" checked={checked} tabIndex={-1} disableRipple />\n      </ListItemIcon>\n      <ListItemText primary={`Number ${number}`} />\n      <ListItemSecondaryAction classes={{ root: classes.secondaryAction }}>\n        <IconButton\n          aria-label=\"Delete\"\n          edge=\"end\"\n          onClick={() => onDelete(number)}\n        >\n          <CloseIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </MuiListItem>\n  );\n};\n\nexport default ListItem;\n","import React, { useState } from \"react\";\nimport MaskedInput from \"react-text-mask\";\nimport {\n  Button,\n  Input,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nconst TextMaskCustom = (props) => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[/\\d/, /\\d/, /\\d/, /\\d/]}\n    />\n  );\n};\n\nconst AddDialog = ({ open, onClose, numbers, onAdd }) => {\n  const [error, setError] = useState(null);\n  const [newNumber, setNewNumber] = useState(null);\n  const handleAdd = () => {\n    let errorStr = null;\n    if (newNumber) {\n      if (numbers.indexOf(newNumber) !== -1) {\n        errorStr = `${newNumber} already exist`;\n      }\n    } else {\n      errorStr = \"number is required\";\n    }\n    if (errorStr) {\n      setError(errorStr);\n    } else {\n      onAdd(newNumber);\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    setNewNumber(null);\n    setError(null);\n    onClose();\n  };\n  const handleOnChange = (event) => {\n    setNewNumber(parseInt(event.target.value, 10));\n  };\n  const hasError = error !== null;\n  return (\n    <div>\n      <Dialog open={open} onClose={onClose}>\n        <DialogTitle>Add Number</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Number is between 1 to 9999</DialogContentText>\n          <FormControl error={hasError}>\n            <Input\n              autoFocus\n              margin=\"dense\"\n              id=\"number\"\n              label=\"Number\"\n              onChange={handleOnChange}\n              fullWidth\n              error={hasError}\n              inputComponent={TextMaskCustom}\n            />\n            {error && <FormHelperText>{error}</FormHelperText>}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAdd} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddDialog;\n","import React from \"react\";\nimport MuiSnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    flexWrap: \"nowrap\",\n  },\n}));\n\nconst SnackbarContent = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiSnackbarContent\n      className={classes.root}\n      aria-describedby=\"client-snackbar\"\n      message={message}\n    />\n  );\n};\n\nexport default SnackbarContent;\n","import React from \"react\";\n\nimport MuiSnackbar from \"@material-ui/core/Snackbar\";\n\nimport SnackbarContent from \"./SnackbarContent\";\n\nconst anchorOrigin = { vertical: \"bottom\", horizontal: \"right\" };\nconst duration = 5000;\n\nconst Snackbar = ({ message, onClose }) => {\n  const open = message !== null;\n  return (\n    <MuiSnackbar\n      anchorOrigin={anchorOrigin}\n      open={open}\n      autoHideDuration={duration}\n      onClose={onClose}\n    >\n      <SnackbarContent message={message} />\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n","import React, { useState, Fragment } from \"react\";\n\nimport { List, Grid, makeStyles } from \"@material-ui/core\";\nimport { append, sortWith, comparator, unfold, without } from \"ramda\";\nimport ListSubheader from \"./ListSubheader\";\nimport ListItem from \"./ListItem\";\nimport AddDialog from \"./AddDialog\";\nimport Snackbar from \"./Snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\",\n    maxHeight: 400,\n    margin: \"auto\",\n    marginTop: 100,\n    width: 350,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst ListCard = () => {\n  const classes = useStyles();\n  const [numbers, setNumbers] = useState(() =>\n    unfold((n) => (n > 10 ? false : [n, n + 1]), 1)\n  );\n  const [sortAsc, setSortAsc] = useState(true);\n\n  const [checked, setChecked] = useState([]);\n\n  const [showAdd, setShowAdd] = useState(false);\n\n  const [message, setMessage] = useState(null);\n\n  const sortedNumbers = sortAsc\n    ? sortWith([comparator((a, b) => a < b)], numbers)\n    : sortWith([comparator((a, b) => a > b)], numbers);\n\n  const handleClick = (number) => {\n    setChecked((checked) => {\n      const currentIndex = checked.indexOf(number);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(number);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n      return newChecked;\n    });\n  };\n\n  const handleAdd = (number) => {\n    setNumbers((numbers) => append(number, numbers));\n    setMessage(`${number} added!`);\n  };\n\n  const handleDelete = (number) => {\n    setNumbers((numbers) => without([number], numbers));\n    setChecked((checked) => without([number], checked));\n  };\n\n  const handleDeleteMultiple = () => {\n    setNumbers((numbers) => without(checked, numbers));\n    setChecked([]);\n  };\n\n  const handleSort = () => {\n    setSortAsc((sortAsc) => !sortAsc);\n  };\n\n  const handleCloseAdd = () => {\n    setShowAdd(false);\n  };\n\n  const handleOpenAdd = () => {\n    setShowAdd(true);\n  };\n\n  const handleCloseMessage = () => {\n    setMessage(null);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <List\n          className={classes.root}\n          subheader={\n            <ListSubheader\n              numbers={sortedNumbers}\n              disableDelete={checked.length === 0}\n              disableSort={numbers.length === 0}\n              onSort={handleSort}\n              onDelete={handleDeleteMultiple}\n              onOpenAdd={handleOpenAdd}\n            />\n          }\n        >\n          {sortedNumbers.map((number) => (\n            <ListItem\n              key={number}\n              number={number}\n              onClick={handleClick}\n              onDelete={handleDelete}\n              checked={checked.indexOf(number) !== -1}\n            />\n          ))}\n        </List>\n      </Grid>\n      <AddDialog\n        numbers={sortedNumbers}\n        open={showAdd}\n        onClose={handleCloseAdd}\n        onAdd={handleAdd}\n      />\n      <Snackbar message={message} onClose={handleCloseMessage} />\n    </Fragment>\n  );\n};\n\nexport default ListCard;\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport ListCard from \"./ListCard\";\nimport theme from \"./theme\";\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <ListCard />\n  </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}